public class Customer {
	private String name;
	private List<Rental> rentals = new ArrayList<Rental>();
	
	public Customer(String name) {
		this.name = name;
	}
	
	public void addRental(Rental rental) {
		rentals.add(rental);
	}
	
	public String getName() {
		return name;
	}
	// 고객님 대여목록을 출력하고 대여금액과 적립금액을 계산함//3가지
	// 대여금액: 일반>> 기본 2,000원 , 2일 이후 대여일 * 1,500원
	// 대여금액: 최신>> 대여일 * 2000원
	// 대여금액: 아동>> 기본 1500원, 3일 이후 대여일 * 1500원
	// 적립금액: 일반, 아동, 최신 >> 100점
	// 적립금액: 최신>> 2일 이상이면 추가 100
	// 너무 많은 일을 ???/
	
	public String statement() {
		int totalAmount =0;
		int frequentRenterPoints = 0;
		//Enumeration _rentals = rentals.elements();
		String result = String.format("고객 %s님의 대여목록:\n", name);
		for (Rental rental : rentals) {
			int thisAmount = 0;
			// 비디오 종류별 대여료 계산
			switch(rental.getMovie().getPriceCode()) {
			case REGULAR:
				thisAmount +=2000;
				if(rental.getDaysRented() > 2) 
					thisAmount+=(rental.getDaysRented()-2) * 1500;
				break;			
			case NEW_RELEASE:
				thisAmount += rental.getDaysRented() * 2000;
				break;
			case CHILDREN:
				thisAmount += 1500;
				if(rental.getDaysRented() > 3) 
					thisAmount += (rental.getDaysRented()-3)*1500;
				break;
				}
			
			// 적립 포인트를 100 포인트 증가
			frequentRenterPoints+=100;
			
			//최신물을 이틀 이상 대여하면 보너스 포인트 지급
			if(rental.getMovie().getPriceCode() == Movie.PriceCode.NEW_RELEASE && rental.getDaysRented()>1) 
				frequentRenterPoints +=100;
			
			//이번에 대여하는 비디오 정보와 대여로를 출력
			result += String.format("\t%s\t%,d원\n", rental.getMovie().getTitle(),thisAmount);
			// 현재까지 누적된 총 대여료
			totalAmount += thisAmount;
		}
		
		result += String.format("총금액: %,d원\n", totalAmount);
		result += String.format("적립포인트: %,d점\n", frequentRenterPoints);
		return result;
	}
}
